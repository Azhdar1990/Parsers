# –§–∞–π–ª —Ö–µ–Ω–¥–ª–µ—Ä–∞ "other"
#
from aiogram import types, Dispatcher
import json, string

#@dp.message_handler()
async def echo_send(message : types.Message):
    if {i.lower().translate(str.maketrans("", "", string.punctuation)) for i in message.text.split(" ")}\
        .intersection(set(json.load(open("slova.json", encoding='utf-8-sig')))) != set():
        await message.answer("–ê–π —è–π —è–π... –ö–∞–∫ –Ω–µ —Å—Ç—ã–¥–Ω–æ... üôÅ")
        await message.delete()
    else:
        await message.answer("–ù–µ—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã üôÅ")


def register_handlers_other(dp : Dispatcher):
    dp.register_message_handler(echo_send)