from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
from auth_data import token


bot = Bot(token=token)
dp = Dispatcher(bot)

# –ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞ –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –¥–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
# –ï—ë –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å –≤ executor –¥–ª—è –∑–∞–ø—É—Å–∫–∞
# –í –¥–∞–Ω–Ω–æ–º –ø—Ä–∏–º–µ—Ä–µ –∫–æ–¥–∞ –±–æ—Ç –±—É–¥–µ—Ç –≤ –æ–Ω–ª–∞–π–Ω, –æ–Ω –Ω–∞–ø–∏—à–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å–≤–∏–µ –∫ –∫–æ–º–∞–Ω–¥–Ω—É—é —Å—Ç—Ä–æ–∫—É.
# async def on_startup():
#     print("—è –æ–Ω–ª–∞–π–Ω")

#********************************–ö–õ–ò–ï–ù–¢–°–ö–ê–Ø –ß–ê–°–¢–¨********************************#
# –£–∫–∞–∂–µ–º –∫–æ–º–∞–Ω–¥—ã –Ω–∞ –∫–∞–∫–∏–µ –±–æ—Ç –±—É–µ—Ç —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å.
# –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–ø–∏—à–µ—Ç  /start –∏–ª–∏ /help —Ç–æ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –¥–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è.
@dp.message_handler(commands=['start', 'help'])
async def commands_start(message : types.Message):
    try:
        await bot.send_message(message.from_user.id, "–¢—ã –≤–≤–µ–ª /start –∏–ª–∏ /help")
        await bot.send_message(message.from_user.id, "–°—Ä–∞–±–æ—Ç–∞–ª–∞ —Ñ—É–Ω–∫—Ü–∏—è commands_start..")
    except:
        await message.reply("–û–±—â–µ–Ω–∏–µ —Å –±–æ—Ç–æ–º —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –õ–°, –Ω–∞–ø–∏—à–∏—Ç–µ –µ–º—É.")

@dp.message_handler(commands=['—Ç—ã'])
async def hwo_i_am(message : types.Message):
    try:
        await bot.send_message(message.from_user.id, "–Ø –±–æ—Ç –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã–π —á–µ–ª–æ–≤–µ–∫–æ–º –ø–æ –∏–º–µ–Ω–∏ –ê–∂–¥–∞—Ä –ú–∞–Ω–∏–µ–≤")
    except:
        await message.reply("–û–±—â–µ–Ω–∏–µ —Å –±–æ—Ç–æ–º —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –õ–°, –Ω–∞–ø–∏—à–∏—Ç–µ –µ–º—É.")




@dp.message_handler()
async def echo_send(message : types.Message):
    await message.answer("–ù–µ—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã üôÅ")
#********************************–ê–î–ú–ò–ù–°–ö–ê–Ø –ß–ê–°–¢–¨********************************#

#********************************–û–ë–©–ê–Ø –ß–ê–°–¢–¨********************************#

# executor.start_polling(dp, skip_updates=True, on_startup=on_startup)
executor.start_polling(dp, skip_updates=True)